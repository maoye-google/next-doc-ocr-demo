events {
    worker_connections 1024;
}



http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # types {
    #     text/javascript                     js;
    #     text/javascript                     mjs;
    # }

    # Define a log format (optional, but good practice for structured logs)
    # log_format combined_stdout '$remote_addr - $remote_user [$time_local] "$request" '
    #                            '$status $body_bytes_sent "$http_referer" '
    #                            '"$http_user_agent" "$http_x_forwarded_for"';

    # # Redirect access logs to /dev/stdout
    # access_log /dev/stdout combined_stdout;

    # # Redirect error logs to /dev/stderr
    # error_log /dev/stderr info; # You can adjust the log level (info, warn, error, crit, etc.)
    
    # # Enable gzip compression
    # gzip on;
    # gzip_vary on;
    # gzip_min_length 1024;
    # gzip_types
    #     application/javascript
    #     application/json
    #     text/css
    #     text/javascript
    #     text/plain
    #     text/xml;

    types {
        text/html       html htm;
        application/javascript js mjs;
        application/json json;
        application/octet-stream bin;
    }

    server {
        listen 80;
        server_name localhost;
        
        # Root directory for the React build files
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # API proxy to backend
        location /api/ {
            proxy_pass http://doc-ocr-backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }
        
        # # Explicitly handle .mjs files as ES modules (must come before general static assets)
        location ~* \.mjs$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # location ~ \.css {
        #     add_header  Content-Type    text/css;
        # }

        # location ~ \.js {
        #     add_header  Content-Type    application/x-javascript;
        # }

        # location ~ \.mjs {
        #     add_header  Content-Type    application/x-javascript;
        # }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        
        # React app - handle client-side routing
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        # add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # Hide nginx version
        server_tokens off;
    }
}
