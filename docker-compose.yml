# docker-compose.yml
version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    user: root
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ocr_network

  local-kafka:
    image: confluentinc/cp-kafka:latest
    container_name: local-kafka
    user: root
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://local-kafka:9092,INTERNAL://local-kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,INTERNAL://0.0.0.0:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - ocr_network
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 5

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: ocr_demo
    volumes:
      - mongodb_data:/data/db
    networks:
      - ocr_network

  doc-ocr-backend: 
    container_name: doc-ocr-backend
    build:
      context: ./doc-ocr-backend 
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - doc_ocr_backend_models:/root/.paddleocr/ 
      - ./doc-ocr-backend/app:/app/app
    environment:
      PYTHONUNBUFFERED: 1
      KAFKA_BROKER: local-kafka:29092
      MONGODB_URL: mongodb://mongodb:27017/ocr_demo
    networks:
      - ocr_network
    depends_on:
      local-kafka:
        condition: service_healthy
      mongodb:
        condition: service_started
    restart: on-failure

  doc-ocr-processing:
    container_name: doc-ocr-processing
    build:
      context: ./doc-ocr-processing
      dockerfile: Dockerfile
    environment:
      PYTHONUNBUFFERED: 1
      KAFKA_BROKER: local-kafka:29092
      MONGODB_URL: mongodb://mongodb:27017/ocr_demo
      GOOGLE_APPLICATION_CREDENTIALS: /app/credentials/claude-code-sa-key.json
      GCP_PROJECT_ID: ${GCP_PROJECT_ID:-demo-project}
      GCP_LOCATION: ${GCP_LOCATION:-us-central1}
    volumes:
      - ./credentials:/app/credentials
      - ./doc-ocr-processing/app:/app/app
    networks:
      - ocr_network
    depends_on:
      kafka:
        condition: service_healthy
      mongodb:
        condition: service_started
    restart: on-failure

  doc-ocr-frontend:  # Renamed service
    container_name: doc-ocr-frontend
    build:
      context: ./doc-ocr-frontend  # Updated context
      dockerfile: Dockerfile
    ports:
      - "${PORT:-5173}:5173"
    environment:
      BACKEND_HOST: doc-ocr-backend
      BACKEND_PORT: 8000 
    networks:
      - ocr_network
    volumes:
      - ./doc-ocr-frontend/src:/app/src
      - ./doc-ocr-frontend/public:/app/public
    depends_on:
      - doc-ocr-backend

volumes:
  doc_ocr_backend_models:
  mongodb_data: 

networks:
  ocr_network:
    driver: bridge
